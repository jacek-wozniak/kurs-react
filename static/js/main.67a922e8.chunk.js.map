{"version":3,"sources":["components/Form.js","functions.js","components/ToDo/ToDoTask.js","components/ToDo/ToDoList.js","components/Done/DoneTask.js","components/Done/DoneList.js","class/StorageManager.js","components/App.js","serviceWorker.js","index.js"],"names":["Form","state","content","dueDate","priority","contentError","handleInputFocus","e","_this","setState","handleInputChange","valueOrChecked","target","checked","value","Object","defineProperty","name","handleDateChange","date","handleFormSubmit","preventDefault","isValid","length","newTask","Date","parse","props","addTask","_this2","this","_this$state","react_default","a","createElement","className","onClick","toggleTab","active","placeholder","onFocus","onChange","react_datepicker_min_default","selected","placeholderText","dateFormat","htmlFor","id","type","Component","parseDate","time","day","getDate","month","getMonth","year","getFullYear","concat","showRemoveIcon","clickAction","arguments","undefined","title","ToDoTask","_props$task","task","now","isExpired","showDoneIcon","doTask","removeTask","ToDoList","tasks","map","ToDo_ToDoTask","key","DoneTask","doneDate","DoneList","Done_DoneTask","instance","StorageManager","classCallCheck","getData","push","localStorage","setItem","JSON","stringify","console","error","getItem","App","activeTabs","form","todo","done","storage","handleAddTask","toConsumableArray","maxId","Math","max","apply","item","createDate","addData","handleRemoveTask","filter","setData","handleDoTask","handleToggleTabActive","tab","newActiveTabs","objectSpread","arr","_filterTasks","reduce","_ref","currentValue","_ref2","slicedToArray","_filterTasks2","tasksDone","tasksToDo","components_Form","ToDo_ToDoList","Done_DoneList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67a922e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Form extends Component {\n  state = {\n    content: '',\n    dueDate: '',\n    priority: false,\n    contentError: ''\n  }\n\n  handleInputFocus = e => {\n    if(this.state.contentError) {\n      this.setState({contentError:''});\n    }\n  }\n\n  handleInputChange = e => {\n    const valueOrChecked = e.target.checked || e.target.value;\n    this.setState({\n      [e.target.name]: valueOrChecked\n    })\n  }\n\n  handleDateChange = date => {\n    this.setState({\n      dueDate: date\n    })\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    let isValid = true;\n    if(this.state.content.length < 3) {\n      this.setState({contentError: \"Wpisz conajmniej 3 znaki\"})\n      isValid = false;\n    } else if(this.state.content.length >= 50) {\n      this.setState({contentError: \"Przekroczyłeś 50 znaków\"})\n      isValid = false;\n    }\n\n    if(isValid) {\n      const newTask = {\n        content: this.state.content,\n        dueDate: Date.parse(this.state.dueDate) || 0,\n        priority: this.state.priority,\n      }\n      this.props.addTask(newTask);\n      this.setState({\n        content: '',\n        dueDate: '',\n        priority: false,\n        contentError: ''\n      })\n    }\n  }\n\n  render() {\n    const {content, dueDate, priority, contentError} = this.state;\n    return (\n      <section className=\"section\">\n        <h2\n          className=\"section__header\"\n          onClick={() => this.props.toggleTab('form')}\n        >\n          Dodaj nowe zadanie\n        </h2>\n        <form\n          className={'form' + (!this.props.active ? ' hidden' : '' )}\n        >\n          <div className=\"form__textarea-container\">\n            <textarea\n              className=\"form__textarea\"\n              name=\"content\"\n              placeholder=\"Treść zadania\"\n              value={content}\n              onFocus={this.handleInputFocus}\n              onChange={this.handleInputChange}\n            />\n            {contentError && <span className=\"form__error\">{contentError}</span>}\n          </div>\n          <div className=\"form__date-container\">\n            <DatePicker\n              className=\"form__date\"\n              selected={dueDate}\n              onChange={this.handleDateChange}\n              placeholderText='Data'\n              dateFormat=\"dd-MM-yyyy\"\n            />\n          </div>\n          <label\n            htmlFor=\"priorityCheckbox\"\n            className=\"form__checkbox-label\"\n          >\n            <input\n              id=\"priorityCheckbox\"\n              className=\"form__checkbox\"\n              name=\"priority\"\n              type=\"checkbox\"\n              checked={priority}\n              onChange={this.handleInputChange}\n            />\n            Priorytet\n          </label>\n          <input\n            className=\"form__submit\"\n            type=\"submit\"\n            value=\"Dodaj\"\n            onClick={this.handleFormSubmit}\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nexport function filterTasks(arr, isValid){\n  return arr.reduce(([done, todo], currentValue) => {\n    return isValid(currentValue) ? [[...done, currentValue], todo] : [done, [...todo, currentValue]];\n  }, [[], []])\n}\n\nexport function parseDate(time) {\n  if(!time) return null;\n  const date = new Date(time);\n  let day = date.getDate(),\n      month = date.getMonth()+1,\n      year = date.getFullYear();\n  if(day<10) day = `0${day}`;\n  if(month<10) month = `0${month}`\n  return `${day}.${month}.${year}`;\n}\n\nexport function isExpired(dueDate) {\n  return !!dueDate && dueDate < Date.now();\n}\n\nexport function classNames(arr) {\n  const classes = Object.entries(arr)\n    .filter(([key, value]) => value)\n    .map(([key, value]) => key)\n    .join(' ');\n  return classes || null;\n}\n\nexport function showPriorityIcon() {\n  return <span className='icon icon--priority' title=\"Zadanie priorytetowe\"/>;\n}\n\nexport function showExpiredIcon() {\n  return <span className='icon icon--expired' title=\"Minęła zaplanowana data wykonania\"/>;\n}\n\nexport function showDoneIcon(clickAction = null) {\n  return <span className='icon icon--done' title=\"Wykonaj\" onClick={clickAction}/>;\n}\n\nexport function showRemoveIcon(clickAction = null) {\n  return <span className='icon icon--remove' title=\"Usuń\" onClick={clickAction}/>;\n}","import React from 'react';\nimport {parseDate, isExpired, showPriorityIcon, showExpiredIcon, showDoneIcon, showRemoveIcon} from \"../../functions\";\n\nconst ToDoTask = (props) => {\n  const {id, content, priority, dueDate} = props.task;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{content}</td>\n      <td>{parseDate(dueDate)}</td>\n      <td>\n        {priority && showPriorityIcon()}\n        {isExpired(dueDate) && showExpiredIcon()}\n      </td>\n      <td>\n        {showDoneIcon(() => props.doTask(id))}\n        {showRemoveIcon(() => props.removeTask(id))}\n      </td>\n    </tr>\n  );\n}\n\nexport default ToDoTask;\n","import React, { Component } from 'react';\nimport ToDoTask from './ToDoTask';\n\nconst ToDoList = props => {\n  const tasks = props.tasks.map(task => (\n    <ToDoTask\n      key={task.id}\n      task={task}\n      removeTask={props.removeTask}\n      doTask={props.doTask}\n    />\n  ));\n  \n  return (\n    <section className=\"section todo\">\n      <h2\n        className=\"section__header\"\n        onClick={() => props.toggleTab('todo')}\n      >\n        Zadania do zrobienia:\n      </h2>\n      <table\n        className={'table' + (!props.active ? ' hidden' : '' )}\n      >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Zadanie</th>\n            <th>Zaplanowana data</th>\n            <th>Informacje</th>\n            <th>Akcje</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport {parseDate, showRemoveIcon} from \"../../functions\";\n\nconst DoneTask = (props) => {\n  const {id, content, doneDate} = props.task;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{content}</td>\n      <td>{parseDate(doneDate)}</td>\n      <td>\n        {showRemoveIcon(() => props.removeTask(id))}\n      </td>\n    </tr>\n  );\n}\n\nexport default DoneTask;\n","import React from 'react';\nimport DoneTask from './DoneTask';\nimport ToDoTask from \"../ToDo/ToDoTask\";\n\nconst DoneList = (props) => {\n  const tasks = props.tasks.map(task => (\n    <DoneTask\n      key={task.id}\n      task={task}\n      removeTask={props.removeTask}\n    />\n  ))\n  return (\n    <section className=\"section todo\">\n      <h2\n        className=\"section__header\"\n        onClick={() => props.toggleTab('done')}\n      >\n        Ostatnio zrobione zadania:\n      </h2>\n      <table\n        className={'table' + (!props.active ? ' hidden' : '' )}\n      >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Zadanie</th>\n            <th>Data wykonania</th>\n            <th>Akcje</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default DoneList;\n","let instance = null;\n\nexport default class StorageManager {\n  constructor(name) {\n    if(!instance || instance.name !== name) {\n      this.name = name;\n      this.content = this.getData() || [];\n      instance = this;\n    } else return instance;\n  }\n\n  addData(task) {\n    try {\n      this.content.push(task);\n      localStorage.setItem(this.name, JSON.stringify(this.content));\n    } catch(e) {\n      console.error(`Something went wrong! \\nError: ${e}` )\n    }\n  }\n\n  setData(tasks) {\n    try {\n      this.content = tasks;\n      localStorage.setItem(this.name, JSON.stringify(this.content));\n    } catch(e) {\n      console.error(`Something went wrong! \\nError: ${e}` )\n    }\n  }\n\n  getData() {\n    return JSON.parse(localStorage.getItem(this.name));\n  }\n}","import React, { Component } from 'react';\nimport Form from './Form'\nimport ToDoList from './ToDo/ToDoList'\nimport DoneList from './Done/DoneList'\nimport {filterTasks} from \"../functions\";\nimport StorageManager from \"../class/StorageManager\";\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    activeTabs: {\n      form: false,\n      todo: true,\n      done: true\n    }\n  }\n  storage = new StorageManager('tasks');\n\n  componentDidMount() {\n    this.setState({\n      tasks: this.storage.content\n    })\n  }\n\n  handleAddTask = newTask => {\n    const tasks = [...this.state.tasks],\n          maxId = (tasks.length ? Math.max.apply(null, tasks.map(item => item.id)) : 0);\n    newTask.id = maxId + 1;\n    newTask.createDate = Date.now();\n    tasks.push(newTask);\n    this.storage.addData(newTask);\n    this.setState({tasks});\n  }\n\n  handleRemoveTask = id => {\n    const tasks = this.state.tasks.filter(task => task.id !== id);\n    this.storage.setData(tasks);\n    this.setState({tasks});\n  }\n\n  handleDoTask = id => {\n    const tasks = this.state.tasks.map(task => {\n      if(task.id !== id) return task;\n      else {\n        task.doneDate = Date.now();\n        return task;\n      }\n    });\n    this.storage.setData(tasks);\n    this.setState({tasks});\n  }\n\n  handleToggleTabActive = tab => {\n    const newActiveTabs = {...this.state.activeTabs};\n    newActiveTabs[tab] = !newActiveTabs[tab];\n    this.setState({\n      activeTabs: newActiveTabs\n    })\n  }\n\n  render() {\n    const [tasksDone, tasksToDo] = filterTasks(this.state.tasks, task => task.doneDate);\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">Todoapp</h1>\n        <Form\n          addTask={this.handleAddTask}\n          toggleTab={this.handleToggleTabActive}\n          active={this.state.activeTabs.form}\n        />\n        <ToDoList\n          tasks={tasksToDo}\n          removeTask={this.handleRemoveTask}\n          doTask={this.handleDoTask}\n          toggleTab={this.handleToggleTabActive}\n          active={this.state.activeTabs.todo}\n        />\n        <DoneList\n          tasks={tasksDone}\n          removeTask={this.handleRemoveTask}\n          doTask={this.handleDoTask}\n          toggleTab={this.handleToggleTabActive}\n          active={this.state.activeTabs.done}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport './scss/form.scss';\nimport './scss/table.scss';\nimport './scss/icons.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}